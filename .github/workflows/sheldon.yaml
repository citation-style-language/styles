name: Pull request feedback

on:
  pull_request_target:
    types: [ opened, synchronize, labeled ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
    # owner-test just checks out the PR -- this has an exfiltration risk, make SURE that
    # this can only be triggered by people with repo write access -- such as people that can add
    # labels to a PR
    # https://securitylab.github.com/research/github-actions-preventing-pwn-requests
    - name: Checkout repo for OWNER TEST
      uses: actions/checkout@v2
      if: contains(github.event.pull_request.labels.*.name, 'safe to test')
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    # otherwise, checkout the current master, and the pr to the subdirectory 'pr'
    - name: Checkout base repo for pull-request test
      uses: actions/checkout@v2
      if: "! contains(github.event.pull_request.labels.*.name, 'safe to test')"
    - name: Checkout pull-request
      uses: actions/checkout@v2
      if: "! contains(github.event.pull_request.labels.*.name, 'safe to test')"
      with:
        path: pull-request
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Check for relevant changes
      uses: dorny/paths-filter@v2
      id: changed
      with:
        list-files: shell
        filters: |
          style:
            - '*.csl'
            - 'dependent/*.csl'
          locale:
            - '*.xml'

    - name: Changed files
      run: |
        echo changed: ${{ steps.changed.outputs.style_files }} ${{ steps.changed.outputs.locale_files }}

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0.2
    - name: but use cache to speed that up
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Bundle install
      run: |
        bundle config path vendor/bundle
        bundle update sheldon --jobs 4 --retry 3

    - name: Welcome to a new PR
      if: github.event.action == 'opened' && steps.changed.outputs.style == 'true'
      run: bundle exec sheldon --token=$GITHUB_TOKEN --welcome

    - name: See if the styles/locales work
      run: bundle exec rake

    - name: report
      if: (failure() || success()) && steps.changed.outputs.style == 'true'
      run: bundle exec sheldon --token=$GITHUB_TOKEN --${{ job.status }} --verbose

    - name: Checkout v1.0.1
      uses: actions/checkout@v2
      with:
        ref: v1.0.1

    - name: Update composer.json
      run: |
        git config --global user.email "{YOUR EMAIL}"
        git config --global user.name "{YOUR USERNAME}"

        git fetch origin
        git checkout -b master origin/master

        action1=`git diff --name-status v1.0.1 master composer.json | cut -c 1`
        git checkout v1.0.1
        action2=`git diff --name-status v1.0.1 master composer.json | cut -c 1`
        if [ "$action1" = "M" ] || [ "$action1" = "A" ]; then # M - mod A - add  D - del ;
          git checkout master -- composer.json
          git add composer.json
          git commit -m "Edit composer.json"
          git push --set-upstream origin v1.0.1
          git checkout master
        else
          if [ "$action2" = "D" ]; then
            git rm composer.json
            git commit -m "Delete composer.json"
            git push --set-upstream origin v1.0.1
            git checkout master
          fi
        fi
    
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.6
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        default_bump: patch
      if:  github.event_name == 'push' && hashFiles('composer.json') != '' && (steps.update.outputs.updated == 'true' || steps.update.outputs.deleted == 'true')

    - name: Create a GitHub release
      uses: actions/create-release@v1
      env:
        github_token: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
      if:  github.event_name == 'push' && hashFiles('composer.json') != '' && (steps.update.outputs.updated == 'true' || steps.update.outputs.deleted == 'true')
